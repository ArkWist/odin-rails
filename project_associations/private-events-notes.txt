# Private Events

SETUP

$ rails new private-events
$ rails g model User name:string
$ rails db:migrate
$ rails g controller Users new create show

PROTO SIGN-IN

  Add presence/uniqueness validation to user.rb
$ rails g controller Sessions new
  Add login/logout sessions#new/create/destroy routes
  Change #"should get new" sessions_c... test to login_path
  Add signin form to sessions#new.h.erb
  Add #create to sessions controller
  Add #current_user and #logged_in? to sessions helper
  Add _header with log_in/name link

BASIC EVENTS

$ rails g model Event title:string location:string description:text \
                             date:datetime
$ rails db:migrate
$ rails g migration AddCreatorToEvent creator:references
  Add associations to User and Event models
$ rails db:migrate
  Add @user assignment in users_c#show
  Add events to User's #show page
  
$ rails g controller Events new create show index
  Add Event routes
  Add submit form to events#new.h.erb
  Add #logged_in_user to application_c
  Add before_action :logged_in_user to events_c
  Make events#create use build
  Add @event assignment in events_c#show
  Add creator's name to events#show
  Add all events to event#index

EVENT ATTENDANCE

$ rails g model Invite
$ rails db:migrate
$ rails g controller Invite new create show
$ rails g migration AddAttendeeToEvent attendee:references
$ rails g migration AddGuestToInvite event:references guest:references
  Add associations to User, Event, and Invite models
$ rails db:migrate
  Add attendees to Event's #show
  Add attended_events to User's #show
  Add previous/upcoming events distinction to User's #show
  Add previous/upcoming distinction to Event's #index
  Refactor previous/upcoming into scopes
  Add navigation links
  
CLEAN-UP

  Add logout
  Add invitation form << invite people from event page
                      << also when creating event?
  Restrict pages to logged-in users
  Move user#upcoming/previous from model to controller, or opposite?
  Add homepage and root url
  Add layouts to reduce repetition
  Add user validation
  Add user creation
  Add event validation
  Add event editing
  Add invitation editing
  Make invitations uses checkboxes
  Add invitation to user/event dependencies
  Add invitation acceptance/rejection
  Add tests
  Add styling
  
THINGS TO FIX

> Revisit models and associations
> Perhaps they are wrong
> Like, why does Event have attendee but User doesn't have events_attended
> Should they both have them, or should they have neither?

Testing

$ user1 = User.new(name: "Marth")
$ user2 = User.new(name: "Roy")
$ user3 = User.new(name: "Sigurd")

$ event1 = user2.events.build(title: "Return to Pherae", date: "2002-03-29")
$ event2 = user1.events.build(title: "Smash Brothers", date: "2001-11-21")
$ event3 = user3.events.build(title: "Invasion", date: "2018-06-26")

$ invite1 = event3.invites.build(attendee: user1)
$ invite2 = event1.invites.build(attendee: user1)
$ invite3 = event2.invites.build(attendee: user2)
